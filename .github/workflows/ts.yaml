name: ts

on:
  pull_request:
    paths:
      - src/**
      - tests/**
      - '*.json'
      - '*.yaml'
      - '*.config.*'
      - graphql-codegen.*
      - .github/workflows/ts.yaml
  push:
    branches:
      - main
    paths:
      - src/**
      - tests/**
      - '*.json'
      - '*.yaml'
      - '*.config.*'
      - graphql-codegen.*
      - .github/workflows/ts.yaml

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20
      - run: npm install -g pnpm@latest-10
      - run: pnpm i
      - run: pnpm test

  create-deployments:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      app1: ${{ steps.app1.outputs.id }}
      app2: ${{ steps.app2.outputs.id }}
      app3: ${{ steps.app3.outputs.id }}
    steps:
      - uses: int128/deployment-action@756f2543d85ed5fd599d4d19bbe02ff2ffda5ce8 # v1.45.0
        id: app1
        with:
          environment-suffix: /app1
      - uses: int128/deployment-action@756f2543d85ed5fd599d4d19bbe02ff2ffda5ce8 # v1.45.0
        id: app2
        with:
          environment-suffix: /app2
      - uses: int128/deployment-action@756f2543d85ed5fd599d4d19bbe02ff2ffda5ce8 # v1.45.0
        id: app3
        with:
          environment-suffix: /app3

  create-deployment-statuses:
    needs: create-deployments
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - run: sleep 15
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          deployment_id: ${{ needs.create-deployments.outputs.app1 }}
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: process.env.deployment_id,
              state: 'success',
              log_url: `https://argocd.example.com/pr-${context.issue.number}--app1`,
            })
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          deployment_id: ${{ needs.create-deployments.outputs.app2 }}
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: process.env.deployment_id,
              state: 'success',
              log_url: `https://argocd.example.com/pr-${context.issue.number}--app2`,
            })
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          deployment_id: ${{ needs.create-deployments.outputs.app3 }}
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: process.env.deployment_id,
              state: 'success',
              log_url: `https://argocd.example.com/pr-${context.issue.number}--app3`,
            })

  wait-for-deployment:
    needs: create-deployments
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20
      - run: npm install -g pnpm@latest-10
      - run: pnpm i
      - run: pnpm build
      - name: Run int128/wait-for-deployment-action
        id: wait-for-deployment
        uses: ./
        with:
          until: completed
          deployment-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          initial-delay-seconds: 0
          period-seconds: 3
      - run: jq . <<< "$deployments"
        env:
          deployments: ${{ steps.wait-for-deployment.outputs.json }}

  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20
      - run: npm install -g pnpm@latest-10
      - run: pnpm i
      - run: pnpm lint --fix
      - run: pnpm format
      - run: pnpm graphql-codegen
      - uses: int128/update-generated-files-action@65b9a7ae3ededc5679d78343f58fbebcf1ebd785 # v2.57.0
